name: Build and Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        region: ${{ secrets.AWS_REGION }}

    - name: Build the Docker image
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }} .
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}


   # - name: Update ECS service with new task definition
    #  env:
    #    CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
     #   SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
     #   TASK_DEFINITION_FAMILY: ${{ secrets.TASK_DEFINITION_FAMILY }}
     #   IMAGE_URI: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
     #   EXECUTION_ROLE_ARN: ${{ secrets.EXECUTION_ROLE_ARN }}  # Ensure this secret is set
     # run: |
     #    Register new task definition with the new image
     #   TASK_DEFINITION=$(aws ecs register-task-definition \
       #   --family $TASK_DEFINITION_FAMILY \
       #   --network-mode awsvpc \
       #   --requires-compatibilities FARGATE \
        #  --cpu "256" \
         # --memory "512" \
         # --execution-role-arn $EXECUTION_ROLE_ARN \
         # --container-definitions "[{\"name\":\"my-container\",\"image\":\"$IMAGE_URI\",\"cpu\":256,\"memory\":512,\"essential\":true,\"portMappings\":[{\"containerPort\":80,\"protocol\":\"tcp\"}]}]" \
         # --query 'taskDefinition.taskDefinitionArn' \
         # --output text)
        
        # Update ECS service to use the new task definition
       # aws ecs update-service \
       #   --cluster $CLUSTER_NAME \
        #  --service $SERVICE_NAME \
        #  --task-definition $TASK_DEFINITION
        
